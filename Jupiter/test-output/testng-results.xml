<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-13T18:22:16 IST" name="Default suite" finished-at="2025-01-13T18:22:18 IST" duration-ms="1727">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-13T18:22:16 IST" name="Default test" finished-at="2025-01-13T18:22:18 IST" duration-ms="1727">
      <class name="runner.CucumberRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:16 IST" name="setUpClass" finished-at="2025-01-13T18:22:17 IST" duration-ms="741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@71ad3d8a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Shopper can be login using valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["ShopperStackLogin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Merchant can be login using valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["ShopperStackLogin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Admin can be login using valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["ShopperStackLogin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate user can sort the page Alphabetically"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Books"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate user can add Computing and Internet to cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Books"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validae user can add Health book to cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Books"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate user is able to login using valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user should be able to register"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate when user enters the text in search text and search item should be displayed"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SearchItem"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate when user enters the text in search text and search item should be displayed"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SearchItem"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate when user enters the text in search text and search item should be displayed"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SearchItem"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate when user enters the text in search text and search item should be displayed"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SearchItem"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate when user enters the text in search text and search item should be displayed"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SearchItem"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-13T18:22:17 IST" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["user should be able to subscribe using valid email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Subscribe"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'user enters valid email id and clicks on subscribe' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("user enters valid email id and clicks on subscribe")
public void user_enters_valid_email_id_and_clicks_on_subscribe() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user should be successfuly subscribe")
public void user_should_be_successfuly_subscribe() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user enters valid email id and clicks on subscribe' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("user enters valid email id and clicks on subscribe")
public void user_enters_valid_email_id_and_clicks_on_subscribe() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user should be successfuly subscribe")
public void user_should_be_successfuly_subscribe() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.CucumberRunner@368f2016]" started-at="2025-01-13T18:22:17 IST" name="tearDownClass" finished-at="2025-01-13T18:22:18 IST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.CucumberRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
